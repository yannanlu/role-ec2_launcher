---
- name: Query facts on the AMI
  ec2_ami_find:
    profile: "{{profile}}"
    region: "{{region}}"
    ami_id: "{{image_id}}"
  register: ami_info

- name: Set the default user for Ubuntu
  set_fact:
    default_user: ubuntu
  when: ami_info.results[0].name|search("ubuntu")

- name: Set the default user for CentOS
  set_fact:
    default_user: centos
  when: ami_info.results[0].name|search("CentOS")

- name: Create security group
  ec2_group:
    name: "{{sg_name | default(key_name + '_sg')}}"
    description: "A Security group"
    profile: "{{profile}}"
    region: "{{region}}"
    vpc_id: "{{vpc_id}}"
    rules: "{{sg_rules}} + {{extra_sg_rules}}"
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: ami_info.results|length > 0
  register: basic_firewall

- name: Create an EC2 instance
  ec2:
    key_name: "{{key_name}}"
    profile: "{{profile}}"
    region: "{{region}}"
    group_id: "{{basic_firewall.group_id}}"
    instance_type: "{{instance_type}}"
    image: "{{image_id}}"
    instance_tags:
      Name: "{{instance_tag | default(key_name + '_test')}}"
    count: "{{ec2_count}}"
    user_data: "{{lookup('file', 'files/user_data.sh')}}"
    volumes:
      - device_name: "{{ami_info.results[0].root_device_name}}"
        volume_size: 8
        delete_on_termination: true
    vpc_subnet_id: "{{subnet_id}}"
    assign_public_ip: yes
    instance_profile_name: "{{iam_role}}"
    wait: yes
  when: basic_firewall.group_id is defined and ami_info.results|length > 0
  register: basic_ec2

- name: Display basic_ec2 info
  debug:
    msg: "id: {{item.id}}, hostname: {{item.public_dns_name}}, user: {{default_user}}"
  with_items: "{{basic_ec2.instances}}"
  when: basic_ec2.instances|length > 0

- name: Wait for the instance to fullly come up
  wait_for:
    host: "{{item.public_ip}}"
    port: 22
    state: started
    delay: 60
    timeout: "{{wait_for_up}}"
  with_items: "{{basic_ec2.instances}}"
  when: basic_ec2.instances|length > 0

- name: Set pause time
  set_fact:
    pause_sec: "{{pause_for_up}}"

- name: Adjust pause time
  set_fact:
    pause_sec: "{{ (pause_for_up + 30)|int|abs }}"
  when: basic_ec2.instances|length > 0 and ami_info.results[0].name|search("CentOS")

- name: Pause for a while
  pause:
    seconds: "{{pause_sec}}"
  when: basic_ec2.instances|length > 0 and pause_sec > 0

- name: Add new instances to the group
  add_host:
    name: "{{item.public_dns_name}}"
    ansible_user: "{{default_user}}"
    instance_id: "{{item.id}}"
    private_name: "{{item.private_dns_name}}"
    private_ip: "{{item.private_ip}}"
    groups: ec2hosts
  with_items: "{{basic_ec2.instances}}"
  when: basic_ec2.instances is defined
