---
- name: Set ec2_sg_info
  set_fact:
    ec2_sg_info: []
  when: ec2_sg_info is not defined

- name: Get ec2 security group facts with profile (boto3 required)
  ec2_group_facts:
    profile: "{{profile}}"
    region: "{{region}}"
    filters:
      vpc_id: "{{vpc_id}}"
      group_name: "{{sg_name|default(key_name + '_sg')}}"
  when: profile != 'tower'
  register: ec2_sg_info_p

- name: Add sg to ec2_sg_info with profile in {{region}}
  set_fact:
    ec2_sg_info: "{{ec2_sg_info}} + [{{item}}]"
  with_items: "{{ec2_sg_info_p.security_groups}}"
  loop_control:
    label: "{{item.group_name}}: {{item.group_id}}"
  when: ec2_sg_info_p.security_groups is defined and ec2_sg_info_p.security_groups|length > 0

- name: Get ec2 security group facts with tower (boto3 required)
  ec2_group_facts:
    region: "{{region}}"
    filters:
      vpc_id: "{{vpc_id}}"
      group_name: "{{sg_name|default(key_name + '_sg')}}"
  when: profile == 'tower'
  register: ec2_sg_info_k

- name: Add sg to ec2_sg_info with tower in {{region}}
  set_fact:
    ec2_sg_info: "{{ec2_sg_info}} + [{{item}}]"
  with_items: "{{ec2_sg_info_k.security_groups}}"
  loop_control:
    label: "{{item.group_name}}: {{item.group_id}}"
  when: ec2_sg_info_k.security_groups is defined and ec2_sg_info_k.security_groups|length > 0
