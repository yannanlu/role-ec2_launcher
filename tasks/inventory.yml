---
- name: Query facts on the AMI with profile in {{region}}
  ec2_ami_facts:
    profile: "{{profile}}"
    region: "{{region}}"
    image_ids: "{{ec2_info[0].image_id}}"
  when: profile != 'tower'
  register: ami_info_p

- name: Query facts on the AMI with tower in {{region}}
  ec2_ami_facts:
    access_key: "{{assumed_role.sts.access_key|default(None)}}"
    secret_key: "{{assumed_role.sts.secret_key|default(None)}}"
    security_token: "{{assumed_role.sts.session_token|default(None)}}"
    region: "{{region}}"
    image_ids: "{{ec2_info[0].image_id}}"
  when: profile == 'tower'
  register: ami_info_k

- name: Reset the default user for Ubuntu
  set_fact:
    default_user: ubuntu
  when: (ami_info_p.images is defined and ami_info_p.images|length > 0 and ami_info_p.images[0].name is search('ubuntu')) or (ami_info_k.images is defined and ami_info_k.images|length > 0 and ami_info_k.images[0].name is search('ubuntu'))

- name: Reset the default user for CentOS
  set_fact:
    default_user: centos
  when: (ami_info_p.images is defined and ami_info_p.images|length > 0 and ami_info_p.images[0].name is search('CentOS')) or (ami_info_k.images is defined and ami_info_k.images|length > 0 and ami_info_k.images[0].name is search('CentOS'))

- name: Add public dns name of existing instances to host group in {{region}}
  add_host:
    name: "{{item.public_dns_name}}"
    ansible_user: "{{default_user}}"
    instance_id: "{{item.instance_id}}"
    private_name: "{{item.private_dns_name}}"
    private_ip: "{{item.private_ip_address}}"
    az: "{{item.placement.availability_zone}}"
    groups: ec2hosts
  with_items: "{{ec2_info}}"
  loop_control:
    label: "id: {{item.instance_id}}, hostname: {{item.public_dns_name}}, private_ip: {{item.private_ip_address}}, user: {{default_user}}, az: {{item.placement.availability_zone}}"
  when: ec2_publicly_accessible
  changed_when: False

- name: Add private ip of existing instances to host group
  add_host:
    name: "{{item.private_ip_address}}"
    ansible_user: "{{default_user}}"
    instance_id: "{{item.instance_id}}"
    private_name: "{{item.private_dns_name}}"
    private_ip: "{{item.private_ip_address}}"
    az: "{{item.placement.availability_zone}}"
    groups: ec2hosts
  with_items: "{{ec2_info}}"
  loop_control:
    label: "id: {{item.instance_id}}, hostname: {{item.public_dns_name}}, private_ip: {{item.private_ip_address}}, user: {{default_user}}, az: {{item.placement.availability_zone}}"
  when: not ec2_publicly_accessible
  changed_when: False
