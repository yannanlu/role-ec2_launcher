---
- include: query.yml     # query the instance

- name: Set ec2_info
  set_fact:
    ec2_info: []

- name: Add running instance to ec2_info
  set_fact:
    ec2_info: "{{ec2_info}} + [{{item}}]"
  with_items: "{{ec2_info_s}}"
  loop_control:
    label: "id: {{item.instance_id}}, hostname: {{item.public_dns_name}}, private_ip: {{item.private_ip_address}}"
  when: item.state.name in ['running']

- name: Check any non-running instances
  fail:
    msg: "can not configure a non-running instance, please make sure all instances are running first"
  when: ec2_info|length < ec2_info_s|length

- name: Get vpc subnet facts with profile in {{region}}
  ec2_vpc_subnet_facts:
    profile: "{{profile}}"
    region: "{{region}}"
    filters:
      vpc_id: "{{vpc_id}}"
  when: profile != 'tower' and subnet_ids|length == 0
  register: vpc_info_p

- name: Add the default subnet_id to subnet_ids in {{region}}
  set_fact:
    subnet_ids: "{{subnet_ids}} + ['{{vpc_info_1.subnets[0].id}}']"
  when: vpc_info_p is changed

- name: Get vpc subnet facts with tower in {{region}}
  ec2_vpc_subnet_facts:
    region: "{{region}}"
    filters:
      vpc_id: "{{vpc_id}}"
  when: profile == 'tower' and subnet_ids|length == 0
  register: vpc_info_k

- name: Add the default subnet_id to subnet_ids in {{region}}
  set_fact:
    subnet_ids: "{{subnet_ids}} + ['{{vpc_info_1.subnets[0].id}}']"
  when: vpc_info_k is changed

- include: inventory.yml # add hosts to in-memory inventory
  when: ec2_info|length > 0

- include: create.yml    # create instances if they are not there
  when: ec2_info|length == 0

- include: query_sg.yml

- include: query_subnet.yml
  vars:
    my_subnet_ids: "{{subnet_ids}}"

- name: Set ec2_profile
  set_fact:
    ec2_profile: "{{profile}}"

- name: Set ec2_sg_rules
  set_fact:
    ec2_sg_rules: "{{sg_rules}} + {{extra_sg_rules}}"
